import { nextTypeId, imGetStateEntry } from "./im-utils-2";

type DomRootType = number & { DomRootType: void };
const ImRoot_TYPEID = nextTypeId();
// TODO: fix the type xD;
function imBeginRoot<K extends keyof HTMLElementTagNameMap, V extends KeyContainer<K>>(rootType: V): HTMLElementTagNameMap[K] {
    const entry = imGetStateEntry(ImRoot_TYPEID);
    if (entry.value === undefined) entry.value = document.createElement(rootType.val);
    const val = entry.value as HTMLElementTagNameMap[K];
    return val;
}


// We can now memoize on an object reference instead of a string
type KeyContainer<K> = { val: K };
export const DomRootTypes: { [K in keyof HTMLElementTagNameMap]: KeyContainer<K>; } = {
    a: { val: "a" },
    abbr: { val: "abbr" },
    address: { val: "address" },
    area: { val: "area" },
    article: { val: "article" },
    aside: { val: "aside" },
    audio: { val: "audio" },
    b: { val: "b" },
    base: { val: "base" },
    bdi: { val: "bdi" },
    bdo: { val: "bdo" },
    blockquote: { val: "blockquote" },
    body: { val: "body" },
    br: { val: "br" },
    button: { val: "button" },
    canvas: { val: "canvas" },
    caption: { val: "caption" },
    cite: { val: "cite" },
    code: { val: "code" },
    col: { val: "col" },
    colgroup: { val: "colgroup" },
    data: { val: "data" },
    datalist: { val: "datalist" },
    dd: { val: "dd" },
    del: { val: "del" },
    details: { val: "details" },
    dfn: { val: "dfn" },
    dialog: { val: "dialog" },
    div: { val: "div" },
    dl: { val: "dl" },
    dt: { val: "dt" },
    em: { val: "em" },
    embed: { val: "embed" },
    fieldset: { val: "fieldset" },
    figcaption: { val: "figcaption" },
    figure: { val: "figure" },
    footer: { val: "footer" },
    form: { val: "form" },
    h1: { val: "h1" },
    h2: { val: "h2" },
    h3: { val: "h3" },
    h4: { val: "h4" },
    h5: { val: "h5" },
    h6: { val: "h6" },
    head: { val: "head" },
    header: { val: "header" },
    hgroup: { val: "hgroup" },
    hr: { val: "hr" },
    html: { val: "html" },
    i: { val: "i" },
    iframe: { val: "iframe" },
    img: { val: "img" },
    input: { val: "input" },
    ins: { val: "ins" },
    kbd: { val: "kbd" },
    label: { val: "label" },
    legend: { val: "legend" },
    li: { val: "li" },
    link: { val: "link" },
    main: { val: "main" },
    map: { val: "map" },
    mark: { val: "mark" },
    menu: { val: "menu" },
    meta: { val: "meta" },
    meter: { val: "meter" },
    nav: { val: "nav" },
    noscript: { val: "noscript" },
    object: { val: "object" },
    ol: { val: "ol" },
    optgroup: { val: "optgroup" },
    option: { val: "option" },
    output: { val: "output" },
    p: { val: "p" },
    picture: { val: "picture" },
    pre: { val: "pre" },
    progress: { val: "progress" },
    q: { val: "q" },
    rp: { val: "rp" },
    rt: { val: "rt" },
    ruby: { val: "ruby" },
    s: { val: "s" },
    samp: { val: "samp" },
    script: { val: "script" },
    search: { val: "search" },
    section: { val: "section" },
    select: { val: "select" },
    slot: { val: "slot" },
    small: { val: "small" },
    source: { val: "source" },
    span: { val: "span" },
    strong: { val: "strong" },
    style: { val: "style" },
    sub: { val: "sub" },
    summary: { val: "summary" },
    sup: { val: "sup" },
    table: { val: "table" },
    tbody: { val: "tbody" },
    td: { val: "td" },
    template: { val: "template" },
    textarea: { val: "textarea" },
    tfoot: { val: "tfoot" },
    th: { val: "th" },
    thead: { val: "thead" },
    time: { val: "time" },
    title: { val: "title" },
    tr: { val: "tr" },
    track: { val: "track" },
    u: { val: "u" },
    ul: { val: "ul" },
    var: { val: "var" },
    video: { val: "video" },
    wbr: { val: "wbr" },
} as const;

